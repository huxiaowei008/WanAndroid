apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'//用于编译Android代码
apply plugin: 'kotlin-kapt'//那些注释处理需要用这个,就是annotationProcessor替换成kapt
//apply plugin: 'android-aspectjx'
android {
    compileSdkVersion config.target_sdk

    defaultConfig {
        minSdkVersion config.min_sdk
        targetSdkVersion config.target_sdk
        versionCode config.version_code
        versionName config.version_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
//    api project(':annotation')

    //KTX https://github.com/android/android-ktx
    api 'androidx.core:core-ktx:1.0.0'

    //Anko Commons https://github.com/Kotlin/anko
    api "org.jetbrains.anko:anko-commons:$versions.anko_version"
    //Anko Layouts
    api "org.jetbrains.anko:anko-sdk25:$versions.anko_version"
    api "org.jetbrains.anko:anko-appcompat-v7:$versions.anko_version"
    //Coroutine listeners for Anko Layouts
    api "org.jetbrains.anko:anko-sdk25-coroutines:$versions.anko_version"
    api "org.jetbrains.anko:anko-appcompat-v7-coroutines:$versions.anko_version"
    //CardView-v7
    api "org.jetbrains.anko:anko-cardview-v7:$versions.anko_version"
    //Design
    api "org.jetbrains.anko:anko-design:$versions.anko_version"
    api "org.jetbrains.anko:anko-design-coroutines:$versions.anko_version"
    //RecyclerView-v7
    api "org.jetbrains.anko:anko-recyclerview-v7:$versions.anko_version"
    api "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$versions.anko_version"
    //ConstraintLayout
    api "org.jetbrains.anko:anko-constraint-layout:$versions.anko_version"

    //support https://github.com/dandar3/android-support-library-README
    api "androidx.appcompat:appcompat:$versions.androidx"
    api "com.google.android.material:material:$versions.androidx"
    api "androidx.legacy:legacy-support-v4:$versions.androidx"
    api "androidx.cardview:cardview:$versions.androidx"
    api "androidx.recyclerview:recyclerview:$versions.androidx"

    //Lifecycle https://developer.android.google.cn/topic/libraries/architecture/lifecycle
    api "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    //ViewModel https://developer.android.google.cn/topic/libraries/architecture/viewmodel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    //LiveData https://developer.android.google.cn/topic/libraries/architecture/livedata
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.lifecycle"

    //retrofit https://github.com/square/retrofit
    api("com.squareup.retrofit2:retrofit:$versions.retrofit") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude module: 'okio'
    }
    implementation("com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit") {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    implementation("com.squareup.retrofit2:converter-gson:$versions.retrofit") {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }

    //Gson https://github.com/google/gson
    api 'com.google.code.gson:gson:2.8.5'

    //okHttp https://github.com/square/okhttp
    api "com.squareup.okhttp3:okhttp:$versions.okhttp"

    //这在okhttp主页下的okhttp-logging-interceptor包中
    api("com.squareup.okhttp3:logging-interceptor:$versions.okhttp") {
        transitive = false
    }

    //timber https://github.com/JakeWharton/timber
    api('com.jakewharton.timber:timber:4.7.1') {
        exclude module: 'annotation'
    }

    //glide图片加载 https://github.com/bumptech/glide
    api("com.github.bumptech.glide:glide:$versions.glide") {
        exclude module: 'annotation'
        exclude module: 'fragment'
    }
    api("com.github.bumptech.glide:okhttp3-integration:$versions.glide") {
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    //    示例代码：
    //    为了更好地控制，你也可以从 okhttp-integration 库中排除过渡依赖：
    //
    //    implementation (com.github.bumptech.glide:okhttp-integration:4.4.0) {
    //        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    //    }
    //    或你可以简单地排除所有 okhttp-integration 库的所有过渡依赖：
    //
    //    implementation (com.github.bumptech.glide:okhttp-integration:4.4.0) {
    //        transitive = false
    //    }

    //RxKotlin https://github.com/ReactiveX/RxKotlin
    api('io.reactivex.rxjava2:rxkotlin:2.3.0') {
        exclude module: 'rxjava'
        exclude group: 'org.jetbrains.kotlin'
    }

    //RxJava https://github.com/ReactiveX/RxJava/tree/2.x
    api 'io.reactivex.rxjava2:rxjava:2.2.2'

    //RxAndroid https://github.com/ReactiveX/RxAndroid/tree/2.x
    api('io.reactivex.rxjava2:rxandroid:2.1.0') {
        exclude module: 'rxjava'
    }

    //RxRelay https://github.com/JakeWharton/RxRelay
    api('com.jakewharton.rxrelay2:rxrelay:2.1.0') {
        exclude module: 'rxjava'
    }

    //RxBinding https://github.com/JakeWharton/RxBinding
    api("com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$versions.rxbinding") {
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'annotation'
        exclude module: 'legacy-support-core-ui'
        exclude group: 'org.jetbrains.kotlin'
    }
    api("com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$versions.rxbinding") {
        exclude module: 'rxandroid'
        exclude module: 'annotation'
        exclude module: 'appcompat'
        exclude group: 'org.jetbrains.kotlin'
    }
    api("com.jakewharton.rxbinding2:rxbinding-design-kotlin:$versions.rxbinding") {
        exclude module: 'rxandroid'
        exclude module: 'annotation'
        exclude module: 'material'
        exclude group: 'org.jetbrains.kotlin'
    }
    api("com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:$versions.rxbinding") {
        exclude module: 'rxandroid'
        exclude module: 'annotation'
        exclude module: 'recyclerview'
        exclude group: 'org.jetbrains.kotlin'
    }

    //dagger2 https://github.com/google/dagger
//    api("com.google.dagger:dagger:$versions.dagger") {
//        exclude group: 'android.arch.lifecycle'
//    }
//    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
//    api("com.google.dagger:dagger-android-support:$versions.dagger") {
//        exclude group: 'android.arch.lifecycle'
//    }
//    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    //Kodein-DI https://github.com/Kodein-Framework/Kodein-DI
    api("org.kodein.di:kodein-di-generic-jvm:$versions.kodein") {
        exclude group: 'org.jetbrains.kotlin'
    }
    api("org.kodein.di:kodein-di-framework-android-core:$versions.kodein") {
        exclude group: 'org.jetbrains.kotlin'
    }
//    api 'org.kodein.di:kodein-di-framework-android-x:5.2.0'
    api("org.kodein.di:kodein-di-framework-android-x:$versions.kodein") {
        exclude group: 'org.jetbrains.kotlin'
        exclude module: 'appcompat'
    }
    api("org.kodein.di:kodein-di-jx-inject-jvm:$versions.kodein") {
        exclude group: 'org.jetbrains.kotlin'
    }

    //AutoDispose https://github.com/uber/AutoDispose
    api('com.uber.autodispose:autodispose-ktx:1.0.0-RC2') {
        exclude group: 'org.jetbrains.kotlin'
        exclude module: 'rxjava'
    }
    api('com.uber.autodispose:autodispose-android-ktx:1.0.0-RC2') {
        exclude group: 'org.jetbrains.kotlin'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'annotation'
    }
    api('com.uber.autodispose:autodispose-android-archcomponents-ktx:1.0.0-RC2') {
        exclude module: 'rxandroid'
        exclude module: 'annotation'
        exclude module: 'lifecycle-runtime'
    }
    //AOP使用
    api 'org.aspectj:aspectjrt:1.8.9'
}
//需要放在这,放上面会出问题 Error:Cause: android.compileSdkVersion is missing!
apply from: 'bintray.gradle'


